#!/usr/bin/env python
# dynamic reconfigure specification for stereo odometer

PACKAGE = "viso2_ros"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

# Matcher parameters
gen.add("nms_n",  int_t, 0, "non-max-suppression: min distance between maxima (in pixels)", 3, 0, 10)
gen.add("nms_tau", int_t, 0, "non-max-suppression: interest point peakiness threshold", 50, 0, 100)
gen.add("match_binsize", int_t, 0, "matching bin width/height (affects efficiency only)", 50, 5, 100)
gen.add("match_radius", int_t, 0, "matching radius (du/dv in pixels)", 200, 10, 500)
gen.add("match_disp_tolerance", int_t, 0, "dv tolerance for stereo matches (in pixels)", 2, 1, 10)
gen.add("outlier_disp_tolerance", int_t, 0, "outlier removal: disparity tolerance (in pixels)", 5, 1, 20)
gen.add("outlier_flow_tolerance", int_t, 0, "outlier removal: flow tolerance (in pixels)", 5, 1, 20)
gen.add("use_multi_stage", bool_t, 0, "use multistage matching (denser and faster)", True)
gen.add("use_half_resolution", bool_t, 0, "match at half resolution, refine at full", True)

refinement_enum = gen.enum([ gen.const("NoRefine", int_t, 0, "No refinement"),
                             gen.const("PixelRefine", int_t, 1, "Pixel-level refinement"),
                             gen.const("SubpixelRefine", int_t, 2, "Subpixel-level refinement")],
                           "An enum to set matcher refinement levels")
gen.add("use_refinement", int_t, 0, "A refinement level enum", 1, 0, 2, edit_method=refinement_enum)

# Bucketing parameters
gen.add("max_features", int_t, 0, "maximal number of features per bucket", 2, 1, 20)
gen.add("bucket_width", int_t, 0, "width of buckets", 50, 10, 100)
gen.add("bucket_height", int_t, 0, "height of buckets", 50, 10, 100)

# Stereo  parameters
gen.add("ransac_iters", int_t, 0, "number of RANSAC iterations", 200, 10, 400)
gen.add("inlier_threshold", double_t, 0, "fundamental matrix inlier threshold", 2.0, 1.0, 5.0)
gen.add("reweighting", bool_t, 0, "use lower border weights (more robust to calibraiton errors)", True)

exit(gen.generate(PACKAGE, "stereo_odometer", "Stereo"))